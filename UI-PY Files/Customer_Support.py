# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CustomerSupport.ui'
#
# Created by: Suraj Giri
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox
from PyQt5.QtCore import *



class Ui_Customer_Support(object):
    def setupUi(self, Customer_Support):
        Customer_Support.setObjectName("Customer_Support")
        Customer_Support.resize(811, 609)
        self.centralwidget = QtWidgets.QWidget(Customer_Support)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(310, 20, 151, 41))
        self.label.setStyleSheet("font: 75 12pt \"Times New Roman\";\n"
"font: 75 14pt \"Times New Roman\";")
        self.label.setObjectName("label")
        self.emailList = QtWidgets.QComboBox(self.centralwidget)
        self.emailList.setGeometry(QtCore.QRect(200, 90, 311, 31))
        self.emailList.setStyleSheet("font: 10pt \"Times New Roman\";")
        self.emailList.setObjectName("emailList")
        self.emailList.addItem("")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(30, 100, 161, 16))
        self.label_2.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_2.setObjectName("label_2")
        self.custQuery = QtWidgets.QLabel(self.centralwidget)
        self.custQuery.setGeometry(QtCore.QRect(190, 150, 351, 121))
        self.custQuery.setStyleSheet("border:1px solid black;")
        self.custQuery.setText("")
        self.custQuery.setObjectName("custQuery")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 150, 151, 16))
        self.label_4.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(30, 290, 151, 21))
        self.label_5.setStyleSheet("font: 75 12pt \"Times New Roman\";")
        self.label_5.setObjectName("label_5")
        self.empreply = QtWidgets.QTextEdit(self.centralwidget)
        self.empreply.setGeometry(QtCore.QRect(190, 290, 351, 101))
        self.empreply.setObjectName("empreply")
        self.rsubmit = QtWidgets.QPushButton(self.centralwidget)
        self.rsubmit.setGeometry(QtCore.QRect(280, 420, 171, 51))
        self.rsubmit.setStyleSheet("font: 75 14pt \"Times New Roman\";")
        self.rsubmit.setObjectName("rsubmit")
        self.Support_logo = QtWidgets.QLabel(self.centralwidget)
        self.Support_logo.setGeometry(QtCore.QRect(670, 20, 91, 71))
        self.Support_logo.setStyleSheet("border:1px solid black;")
        self.Support_logo.setText("")
        self.Support_logo.setObjectName("Support_logo")
        Customer_Support.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(Customer_Support)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 811, 21))
        self.menubar.setObjectName("menubar")
        Customer_Support.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(Customer_Support)
        self.statusbar.setObjectName("statusbar")
        Customer_Support.setStatusBar(self.statusbar)
        self.AddEmail()
        self.rsubmit.clicked.connect(self.submit)
        self.emailList.activated[str].connect(self.EmailSelected)
        self.retranslateUi(Customer_Support)
        QtCore.QMetaObject.connectSlotsByName(Customer_Support)
        timer=QTimer()
        timer.timeout.connect(self.EmailSelected)
        timer.start(100)

        
    def retranslateUi(self, Customer_Support):
        _translate = QtCore.QCoreApplication.translate
        Customer_Support.setWindowTitle(_translate("Customer_Support", "Customer Support"))
        self.label.setText(_translate("Customer_Support", "Customer Support"))
        self.emailList.setItemText(0, _translate("Customer_Support", "Select E-Mail"))
        self.label_2.setText(_translate("Customer_Support", "Select Customer E-Mail:"))
        self.label_4.setText(_translate("Customer_Support", "Customer Queries:\n"
""))
        self.label_5.setText(_translate("Customer_Support", "Support Reply:"))
        self.rsubmit.setText(_translate("Customer_Support", "Submit"))
    

    def connection(self):
        import mysql.connector
        cn=mysql.connector.connect(host="localhost",user="root",password="",database="trs")
        return cn

    #Add Customer Email
    def AddEmail(self):
        try:
            cn=self.connection()
            mq=cn.cursor()
            mq.execute("SELECT customer_email,employee_reply FROM `customer_query` where employee_reply='' ")
            r=mq.fetchall()
            for i in r:
                self.emailList.addItem(i[0])
            return r

        except:
            Message("Support","NO REPLY")   

    #Email Select Method
    def EmailSelected(self):
        cn=self.connection()
        mq=cn.cursor()
        u=self.emailList.currentText()
        mq.execute("SELECT `customer_email`,`customer_message` FROM `customer_query` WHERE customer_email= '"+u+"' ")
        r=mq.fetchone()
        a=str(r[1])
        self.custQuery.setText(a) 
        return u

    #Button Operation
    def submit(self):
        try:
            r=self.empreply.toPlainText()
            u=self.EmailSelected()
            cn=self.connection()
            mq=cn.cursor()
            mq.execute("UPDATE `customer_query` SET `employee_reply`='"+r+"' WHERE customer_email= '"+u+"' ")
            Message("Support","Reply Given")
            cn.commit()     
            self.custQuery.setText("")
            self.empreply.setText("")
            self.emailList.clear()
            self.AddEmail()

        except:
            Message("Support","Error Occured")
            
            

def Message(h,mssg):
        msg = QMessageBox()
        msg.setWindowTitle(h)
        msg.setText(mssg)
        msg.setIcon(QMessageBox.Information)
        msg.exec_()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Customer_Support = QtWidgets.QMainWindow()
    ui = Ui_Customer_Support()
    ui.setupUi(Customer_Support)
    Customer_Support.show()
    sys.exit(app.exec_())
